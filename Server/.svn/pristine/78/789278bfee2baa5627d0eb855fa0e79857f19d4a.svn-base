package com.jctx.chat.config;

import java.beans.PropertyVetoException;

import javax.sql.DataSource;

import org.apache.ibatis.session.SqlSessionFactory;
import org.mybatis.spring.SqlSessionFactoryBean;
import org.mybatis.spring.annotation.MapperScan;
import org.springframework.beans.factory.FactoryBean;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.PropertySource;
import com.mchange.v2.c3p0.ComboPooledDataSource;

@Configuration
@PropertySource("classpath:system.properties")
@MapperScan(basePackages="classpath*:mapper/**/*.xml" )
public class DataSourceConfiguration {
	
	@Value("${jdbc.url}")
	private String jdbcUrl;
	
	@Value("${jdbc.username}")
	private String userName;
	
	@Value("${jdbc.password}")
	private String passWord;
	
	@Value("${jdbc.driver}")
	private String driver;
	
	@Bean(name = "dataSource")
	public DataSource dataSource(){
		try {
			ComboPooledDataSource dataSource = new ComboPooledDataSource();
			
			dataSource.setDriverClass(driver);
			dataSource.setJdbcUrl(jdbcUrl);
			dataSource.setUser(userName);
			dataSource.setPassword(passWord);
			dataSource.setMinPoolSize(20);
			dataSource.setMaxPoolSize(150);
			dataSource.setMaxIdleTime(1800);
			dataSource.setAcquireIncrement(5);
			dataSource.setMaxStatements(0);
			dataSource.setInitialPoolSize(20);
			dataSource.setIdleConnectionTestPeriod(1800);
			dataSource.setAcquireRetryAttempts(30);
			dataSource.setAcquireRetryDelay(100);
			dataSource.setBreakAfterAcquireFailure(false);
			dataSource.setTestConnectionOnCheckout(false);
		
			return dataSource;
			
		} catch (PropertyVetoException e) { 
			e.printStackTrace();
		}
		
		return null;
	}
	
	@Bean
	public FactoryBean<SqlSessionFactory> factoryBean(){
		SqlSessionFactoryBean factoryBean = new SqlSessionFactoryBean();
		factoryBean.setDataSource(dataSource());
		return factoryBean;
	} 
}
