package com.jctx.chat.config;

import java.util.List;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.PropertySource;
import org.springframework.data.redis.connection.RedisConnectionFactory;
import org.springframework.data.redis.connection.RedisNode;
import org.springframework.data.redis.connection.RedisSentinelConfiguration;
import org.springframework.data.redis.connection.jedis.JedisConnectionFactory;

@Configuration
@ComponentScan(basePackages = { "com.jctx.*" })
@PropertySource("classpath:redis.properties")
public class JedisConfig {
	
	static final RedisSentinelConfiguration SENTINEL_CONFIG = new RedisSentinelConfiguration();
	
	@Value("${sentinel.ports.property}")
	private List<Integer> sentinelPorts;

	@Value("${sentinel.hosts.property}")
	private List<String> sentinelHosts;
	
	@Value("${sentinel.master.name}")
	private String sentinelMaster;
	
	@Bean
	public RedisConnectionFactory jedisConnectionFactory() { 
	  
	  return new JedisConnectionFactory(sentinelConfig());
	  
	}
	
	@Bean 
	public RedisSentinelConfiguration sentinelConfig() {
		
		SENTINEL_CONFIG.master(sentinelMaster);
		
		int index = 0;
		for (String host:sentinelHosts){
			
			int port = sentinelPorts.get(index);
			RedisNode sentinel = new RedisNode(host, port);		
			
			SENTINEL_CONFIG.addSentinel(sentinel);
			
			index++;
		}
		
		return SENTINEL_CONFIG;
	}
}
