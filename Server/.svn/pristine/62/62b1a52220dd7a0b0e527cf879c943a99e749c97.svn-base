package com.jctx.chat.module;

import java.io.IOException;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;

import redis.clients.jedis.JedisPubSub;

public class OnlineUserEntity  extends JedisPubSub{
	
	private static final Logger logger = LoggerFactory.getLogger(OnlineUserEntity.class);
	
	MessageReaderPipe msgPuller;
	
	MessageWriterPipe msgPublisher;
	
	OnlineBean bean;
	WebSocketSession session;

	private long updateTime;
	
	public OnlineUserEntity(OnlineBean bean, WebSocketSession session) {
		this.bean = bean;
		this.session = session;

		msgPuller = new MessageReaderPipe(this);
		
		msgPublisher = new MessageWriterPipe(bean);
		
		updateTime = System.currentTimeMillis();
	}

	public void online() {
		msgPuller.online(this.bean);		
	}

	public void offline() {
		try {
			
			msgPuller.close();
			
			msgPublisher.close(); 
			
			session.close();
		
		} catch (IOException e) { 
			e.printStackTrace();
		}
	} 
	
	public void onMessage(String channel, String message) {
		
		logger.info("---redis get message---channel="+channel+" message="+message);
		try {
			this.session.sendMessage(new TextMessage(message));
		} catch (IOException e) { 
			e.printStackTrace();
		}
	}
	
	public void onSubscribe(String channel, int subscribedChannels) {
		logger.info("---subscribe success---channel:"+channel+" subscribedChannels=" + subscribedChannels);   
	}
	
	public void onUnsubscribe(String channel, int subscribedChannels) {
		logger.info("---unsubscribe success---channel:"+channel+" subscribedChannels=" + subscribedChannels);
	} 
	

	public void sendMessage(String targetUid, String payload) {		
		msgPublisher.pushlishToTarget(targetUid, payload);		
	}

	public void keepalive() {
		this.updateTime = System.currentTimeMillis();		
	} 
	public long getUpdateTime(){
		return this.updateTime;
	}
}
