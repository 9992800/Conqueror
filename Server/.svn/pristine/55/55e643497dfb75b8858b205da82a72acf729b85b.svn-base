package com.jctx.chat.service;

import javax.annotation.Resource;

import org.json.JSONObject;
import org.springframework.data.redis.connection.jedis.JedisConnectionFactory;
import org.springframework.stereotype.Service;
import org.springframework.web.socket.WebSocketSession;

import com.jctx.chat.module.MessageBean;
import com.jctx.chat.module.OnlineBean;
import com.jctx.chat.module.OnlineUserEntity;

@Service("jedisService")
public class RedisServiceImp implements RedisService {
	
	
	@Resource
	ChatRedisService chatRedisService;
	

	@Resource
	JedisConnectionFactory jedisFactory;
	
	@Resource
	ChatDbService chatDbService;

	@Override
	public void online(OnlineBean bean, WebSocketSession session) {
		try{
		
		OnlineUserEntity entity = new OnlineUserEntity(jedisFactory, bean, session);
		
		chatRedisService.OnlineUser(bean.getSelf(), entity);
		
		chatDbService.OnlineUser(bean);
		
		}catch(Exception e){
			e.printStackTrace();
		}		
	}
	
	
	@Override
	public void handleTextMessage(String fromUid, String payload) {try{
		
		MessageBean message = new MessageBean(payload);
			
			String targetUid = message.getTargetUid();
			
			chatRedisService.sendMessageToTarget(fromUid, targetUid, payload);
			
			chatDbService.saveChatMessageToDb(fromUid, message);
		
		}catch(Exception e){
			e.printStackTrace();
		}
	}

	@Override
	public void onffline(String sessionId) {
		try{ 
			chatRedisService.OfflineUser(sessionId);
		}catch(Exception e){
			e.printStackTrace();
		}
	}


	@Override
	public void keepalive(String sessionId) {
		chatRedisService.keepalive(sessionId);		
	}
	
}
